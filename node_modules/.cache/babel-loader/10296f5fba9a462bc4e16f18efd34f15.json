{"ast":null,"code":"import _slicedToArray from \"E:\\\\Projects\\\\TODO-List\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Projects\\\\TODO-List\\\\src\\\\Todo.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Todo.css\";\n\nfunction Todo(_ref) {\n  var todo = _ref.todo,\n      remove = _ref.remove,\n      update = _ref.update,\n      toggleComplete = _ref.toggleComplete;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(todo.task),\n      _useState4 = _slicedToArray(_useState3, 2),\n      task = _useState4[0],\n      setTask = _useState4[1];\n\n  var handleClick = function handleClick(event) {\n    remove(event.target.id);\n  };\n\n  var toggleFrom = function toggleFrom() {\n    setIsEditing(!isEditing);\n  };\n\n  var handleUpdate = function handleUpdate(event) {\n    event.preventDefault();\n    update(todo.id, task);\n    toggleFrom();\n  };\n\n  var handleChange = function handleChange(event) {\n    setTask(event.target.value);\n  };\n\n  var toggleCompleted = function toggleCompleted(event) {\n    toggleComplete(event.target.id);\n  };\n\n  var result;\n\n  if (isEditing) {\n    result = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"Todo-edit-form\",\n      onSubmit: handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      value: task,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  } else {\n    result = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: todo.id,\n      onClick: toggleCompleted,\n      className: todo.completed ? \"Todo-task completed\" : \"Todo-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, todo.task), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleFrom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Edit\")), \"-\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Delete\"))));\n  }\n\n  return result;\n}\n\nexport default Todo;","map":{"version":3,"sources":["E:/Projects/TODO-List/src/Todo.js"],"names":["React","useState","ReactDOM","Todo","todo","remove","update","toggleComplete","isEditing","setIsEditing","task","setTask","handleClick","event","target","id","toggleFrom","handleUpdate","preventDefault","handleChange","value","toggleCompleted","result","completed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Todo.css\";\n\nfunction Todo({ todo, remove, update, toggleComplete }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [task, setTask] = useState(todo.task);\n\n  const handleClick = (event) => {\n    remove(event.target.id);\n  };\n  const toggleFrom = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    update(todo.id, task);\n    toggleFrom();\n  };\n  const handleChange = (event) => {\n    setTask(event.target.value);\n  };\n  const toggleCompleted = (event) => {\n    toggleComplete(event.target.id);\n  };\n\n  let result;\n  if (isEditing) {\n    result = (\n      <div className=\"Todo\">\n        <form className=\"Todo-edit-form\" onSubmit={handleUpdate}>\n          <input onChange={handleChange} value={task} type=\"text\" />\n          <button>Save</button>\n        </form>\n      </div>\n    );\n  } else {\n    result = (\n      <div className=\"Todo\">\n        <li\n          id={todo.id}\n          onClick={toggleCompleted}\n          className={todo.completed ? \"Todo-task completed\" : \"Todo-task\"}\n        >\n          {todo.task}\n        </li>\n        <div className=\"Todo-buttons\">\n          <button onClick={toggleFrom}>\n            <p>Edit</p>\n          </button>\n          -\n          <button onClick={handleClick}>\n            <p id={todo.id}>Delete</p>\n          </button>\n        </div>\n      </div>\n    );\n  }\n  return result;\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}